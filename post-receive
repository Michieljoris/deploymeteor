#!/bin/bash

# Clean up any directories that might exist already
if [ -d "/home/ubuntu/meteorapps/meteor/dev/bundletmp" ]; then
    sudo rm -rf /home/ubuntu/meteorapps/meteor/dev/bundletmp
fi

# Create the temporary directory where all the project files should be copied when git pushed
mkdir -p /home/ubuntu/meteorapps/meteor/dev/bundletmp

# Copy all the project files to the temporary directory
echo "Copying updated project files on the EC2 server..."
cd /home/ubuntu/meteorapps/meteor/dev/git
GIT_WORK_TREE="/home/ubuntu/meteorapps/meteor/dev/bundletmp" git checkout -f &> /dev/null

cd /home/ubuntu/meteorapps/meteor/dev/bundletmp

# Create the node bundle using the meteor/meteorite bundle command
echo "Creating node bundle on the EC2 server..."
# remove local directory if present to avoid potential permission issues
if [ -d "/home/ubuntu/meteorapps/meteor/dev/bundletmp/.meteor/local" ]; then
    sudo rm -r .meteor/local
fi
# bundle
(unset GIT_DIR; mrt update --repoPort=80)
# Why unset? https://github.com/oortcloud/meteorite/pull/165
meteor bundle bundle.tgz

# Extract the bundle into the BUNDLE_DIR, and then delete the .tgz file
echo "Extracting node bundle on the EC2 server..."
tar -zxvf bundle.tgz &> /dev/null
sudo rm -f bundle.tgz &> /dev/null
# tar -zxvf bundle.tgz
# sudo rm -f bundle.tgz 


if [ ! -d "/home/ubuntu/meteorapps/meteor/dev/bundletmp/bundle" ]; then
    echo "Meteor bundle command failed!"
    sudo rm -rf /home/ubuntu/meteorapps/meteor/dev/bundletmp
    exit 1
fi

# Reinstall fibers
# (http://stackoverflow.com/questions/13327088/meteor-bundle-fails-because-fibers-node-is-missing)
echo "Bundle/programs/server: Reinstalling fibers in the node bundle on the EC2 server..."
if [ -d "/home/ubuntu/meteorapps/meteor/dev/bundletmp/bundle/programs/server" ]; then
    cd /home/ubuntu/meteorapps/meteor/dev/bundletmp/bundle/programs/server
    sudo rm -rf node_modules/fibers
    npm uninstall fibers 
    npm install fibers 
fi

echo "Bundle/server: Reinstalling fibers in the node bundle on the EC2 server..."
if [ -d "/home/ubuntu/meteorapps/meteor/dev/bundletmp/bundle/server" ]; then
    cd /home/ubuntu/meteorapps/meteor/dev/bundletmp/bundle/server
    sudo rm -rf node_modules/fibers
    npm uninstall fibers 
    npm install fibers 
fi

echo "Copying the extracted and tweaked node application to the $WWW_APP_DIR"
# Copy the extracted and tweaked node application to the WWW_APP_DIR
cp -Rf /home/ubuntu/meteorapps/meteor/dev/bundletmp/bundle/* /home/ubuntu/meteorapps/meteor/dev/www

# Clean up any directories that we created
if [ -d "/home/ubuntu/meteorapps/meteor/dev/bundletmp" ]; then
    sudo rm -rf /home/ubuntu/meteorapps/meteor/dev/bundletmp
fi

cd /home/ubuntu/meteorapps/meteor/dev/www

# Use NVM to install and use correct version of node
echo "Installing and using correct NodeJS version..."
source /home/ubuntu/.nvm/nvm.sh
nvm install v0.10.27 &> /dev/null
nvm use v0.10.27 &> /dev/null
sudo ln -sf ~/.nvm/v0.10.27/bin/node /usr/bin/node &> /dev/null
sudo ln -sf ~/.nvm/v0.10.27/bin/node /usr/local/bin/node &> /dev/null

# Try to stop the node app using forever, in case it's already running
echo "Starting or restarting the dev environment of meteor on the EC2 server..."
sudo forever stop /home/ubuntu/meteorapps/meteor/dev/www/main.js 

# Start the node app using forever
export PORT=8000 
export ROOT_URL=http://edge.axion5.net 
export MONGO_URL=mongodb://localhost:27017/edge
sudo -E forever start -l /home/ubuntu/meteorapps/meteor/dev/logs/forever.log -o /home/ubuntu/meteorapps/meteor/dev/logs/out.log -e /home/ubuntu/meteorapps/meteor/dev/logs/err.log -a -s /home/ubuntu/meteorapps/meteor/dev/www/main.js
